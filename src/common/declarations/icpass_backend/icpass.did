type UserId__1 = principal;
type UserId = principal;
type Profile = 
 variant {
    ok: record {
        id: UserId
        fullname: text
        accounts: vec(record {
            id: principal
            tagId: nat8
            link: text
            password: text
            usernameEmail: text
            notes: text
            mediaId: nat8
        })
    }
    error: text
 };
type NewProfile = 
 record {
   email_notification: bool;
   fullname: text;
   show_wallet_number: bool;
   system_notification: bool;
 };
type newPassword =
    record {
        id:principal;
        tagId:nat8;
        link:text;
        password:text;
        usernameEmail:text;
        notes:text;
        mediaId:nat8
    };
service : {
    addNewAccount: (newPassword) -> (variant {ok:text; err:text});
    create: (NewProfile) -> ();
    get: (UserId__1) -> (Profile) query;
    getOwnId: () -> (UserId__1) query;
    healthcheck: () -> (bool);
    search: (text) -> (vec Profile) query;
    update: (Profile) -> ();
    ibe_encryption_key: () -> (text);
    encrypted_ibe_decryption_key_for_caller: (text) â†’ (text);
}
